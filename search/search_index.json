{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SIG/FastTrack Wiki","text":""},{"location":"#a-package-bazaar-not-a-package-cathedral","title":"A Package Bazaar, not a Package Cathedral","text":"<p>FastTrack, as an ode to a past CentOS repository of a similar name, is a SIG that attempts to provide:</p> <ul> <li>Fixes, customizations, upgrades, and improvements to existing Rocky packages that the community would like to see</li> <li>Backports of patches that may not be released by our upstreams (RHEL, CentOS Stream, or even Fedora) to address bugs or functionality</li> <li>New original packages for Rocky.  It's possible new ones could eventually make it into CentOS Stream or EPEL.</li> <li>Newer major versions of software that override the base Rocky repositories - even versions so new they will likely never land in RHEL, CentOS Stream, or EPEL</li> </ul>"},{"location":"#philosophy","title":"Philosophy","text":"<p>The goal is to have a place in the Rocky project where experimental new packages and updates to existing ones can be published.  Philosophically, this SIG should be wide open to contributions, with much less rigor or vetting than repositories such as EPEL. Newer versions of existing Rocky Linux packages, as well as brand new packages are both welcome.  We don't need reasons to add a package, we need reasons to not add it.</p> <p>Having said that, we can't have absolute anarchy. There must be some kind of a guideline to what can and cannot be accepted.</p>"},{"location":"#reasons-for-fasttrack-package-rejection","title":"Reasons for FastTrack Package Rejection:","text":"<ul> <li>Broken dependencies: <code>dnf repoclosure</code> must succeed on publication.  If some packages are not installable under default Rocky Linux, we cannot include the package until that's fixed</li> <li>Malicious or severe security risk:  We should not publish anything that presents a severe security risk to the user (think remotely-exploitable-by-default code).</li> <li>Changes a core package in a questionable way: Related to the security risk issue.  We cannot override <code>openssl</code> or <code>glibc</code> with questionable behavior or API updates.  \"Core\" is in the eye of the beholder, but generally we want FastTrack users to continue using the solid Rocky Linux base.</li> <li>We don't have permssion to redistribute: Self-explanatory.  Contributions don't necessarily have to be 100% open source, but the Rocky project cannot and will not host copyrighted, non-redistributable content.</li> <li>It already exists in EPEL, RPMFusion, or another 3rd-party repo:  The intention of this SIG is to provide as much \"new and cool\" stuff to Rocky Linux users as possible. If people can already get software from one of the popular 3rd-party repos, that's probably the best place to go.  An exception to this is when dependencies are needed that already exist in another repo, that are needed to build the new package we want.</li> <li>Package clearly belongs in another SIG: The goal of this SIG is to be a \"catchall\" for desirable new packages or updates. However, many times a package clearly doesn't belong in FastTrack, but in another SIG already set up for that purpose. Enhanced kernels should probably go in SIG/Kernel, embedded or single-board specific packages should go in SIG/AltArch, etc.</li> </ul> <p>Outside of these guidelines, package contributions should always be welcome!</p>"},{"location":"#links","title":"Links","text":"<ul> <li>SIG-FastTrack Wiki: https://sig-fasttrack.rocky.page/</li> <li>MatterMost Chat Channel: https://chat.rockylinux.org/rocky-linux/channels/sig-fasttrack</li> <li>FastTrack Git Group: https://git.resf.org/sig_fasttrack/  (New package requests can be in meta/, wiki source under wiki/ )</li> <li>FastTrack Package Sources: https://git.rockylinux.org/sig/fasttrack/</li> <li>Peridot RPM Build System: https://peridot.build.resf.org/</li> </ul>"},{"location":"#responsibilities","title":"Responsibilities","text":""},{"location":"#meetings-communications","title":"Meetings / Communications","text":""},{"location":"#members","title":"Members","text":""},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"package_list/","title":"FastTrack Package List","text":""},{"location":"package_list/#fasttrack-updates","title":"FastTrack-Updates","text":"Package Major Version Reason Extra Notes Date Added"},{"location":"package_list/#fasttrack-new","title":"FastTrack-New","text":"Package Major Version Reason Extra Notes Date Added"},{"location":"repositories/","title":"Repositories","text":"<p>There are 2 main FastTrack repositories:  FastTrack-Updates and FastTrack-New .</p> <p>The -Updates repository contains newer versions of packages found in Rocky Linux, while the -New repository is exclusively new packages.</p>"},{"location":"repositories/#updates-repo-includes-and-excludes","title":"Updates Repo: Includes and Excludes","text":"<p>The FastTrack-Updates repository in particular could be an issue for some users - what if you are only interested in updating certain packages on your system, but leaving others alone?  This is not a problem for FastTrack-New , as you can simply opt to not install packages you don't want.  </p> <p>To assist users, the FastTrack.repo file will have a couple comments explaining how to <code>includepkgs</code> and <code>excludepkgs</code> in DNF.  Specifying includepkgs allows users to only receive updates for the listed packages, while excludepkgs allows them to ignore FastTrack updates of things they prefer to keep on the stock Rocky ones.</p>"},{"location":"repositories/#packages","title":"Packages","text":""},{"location":"repositories/#suggestionsrequests","title":"Suggestions/Requests","text":"<p>New packages can always be discussed for inclusion via issues at: https://git.resf.org/sig_fasttrack/meta/issues</p> <p>The best/fastest way to get a package included in the SIG is to have the build pre-complete in tested.  That is, have a working git repository or SRPM somewhere that you've confirmed builds properly against Rocky Linux.  We can then bring the package into dist-git under https://git.rockylinux.org/sig/fasttrack/src/PACKAGE and build + publish in the Rocky build system.</p>"},{"location":"repositories/#builds","title":"Builds","text":"<p>Package builds must build with Rocky Linux dependencies only. (BaseOS/AppStream/PowerTools/Devel/etc.)  </p> <p>Using 3rd party repos such as EPEL as dependencies is not allowed.  3rd party repositories are subject to change, and we do not want to depend on external packages in order to use SIG-FastTrack.  If a package is dependent on other packages found in EPEL or other repos, these dependencies can be re-built and made available in the FastTrack repositories as well.</p> <p>A standard Mock config will be made available in the SIG's Git space for each major version of Rocky Linux.  These Mock configs will reflect the SIG's Peridot build settings, so proper apples-to-apples testing of builds can be done locally by contributors.</p>"}]}